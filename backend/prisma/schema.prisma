generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique
  passwordHash String
  role         Role
  fullName     String
  phone        String?
  department   Department? @relation(fields: [departmentId], references: [id])
  departmentId String?
  salary       Int       // base monthly salary in kobo (NGN)
  avatarUrl    String?
  createdAt    DateTime  @default(now())
  isActive     Boolean   @default(true)

  employeeProfile EmployeeProfile?
  attendanceLogs  Attendance[]
  penalties       Penalty[]
  webAuthnCredentials WebAuthnCredential[]
}

model EmployeeProfile {
  id         String @id @default(uuid())
  user       User   @relation(fields: [userId], references: [id])
  userId     String @unique
  geofenceId String?
  createdAt  DateTime @default(now())
  selfieRef  String?   // S3 key for enrolled selfie
}

model Department {
  id        String @id @default(uuid())
  name      String @unique
  hodId     String?
  createdAt DateTime @default(now())
  users     User[]
}

model Attendance {
  id           String   @id @default(uuid())
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  type         AttendanceType
  timestamp    DateTime @default(now())
  latitude     Float
  longitude    Float
  photoRef     String?  // S3 key / path to selfie
  geofenceId   String?
  notes        String?
}

model Geofence {
  id          String   @id @default(uuid())
  name        String
  centerLat   Float
  centerLng   Float
  radiusMeters Int
  createdBy   String?
  createdAt   DateTime @default(now())
}

model Penalty {
  id          String @id @default(uuid())
  user        User   @relation(fields: [userId], references: [id])
  userId      String
  type        PenaltyType
  amount      Int    // in kobo
  reason      String
  createdAt   DateTime @default(now())
  active      Boolean @default(true)
}

model Payroll {
  id         String   @id @default(uuid())
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  month      Int
  year       Int
  baseSalary Int
  deductions Int
  netPay     Int
  generatedAt DateTime @default(now())
}

model WebAuthnCredential {
  id         String @id @default(uuid())
  user       User   @relation(fields: [userId], references: [id])
  userId     String
  credentialId String @unique
  publicKey  String
  transports String?
  createdAt  DateTime @default(now())
}

enum Role {
  CEO
  HR
  HOD
  EMPLOYEE
}

enum AttendanceType {
  CLOCK_IN
  CLOCK_OUT
  BREAK_START
  BREAK_END
}

enum PenaltyType {
  DAMAGE
  MISSED_DEAL
  ABSENTEEISM
  CONTRACT_BREACH
}